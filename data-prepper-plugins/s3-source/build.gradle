/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':data-prepper-api')
    implementation 'io.micrometer:micrometer-core'
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:sts'
    implementation 'software.amazon.awssdk:sqs'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.220'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

tasks.withType(JavaCompile).getByName('compileIntegrationTestJava').configure {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    useJUnitPlatform()
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(11)
    }

    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperty 'tests.s3source.bucket', System.getProperty('tests.s3source.bucket')
    systemProperty 'tests.s3source.region', System.getProperty('tests.s3source.region')
    systemProperty 'tests.s3source.queue.url', System.getProperty('tests.s3source.queue.url')

    filter {
        includeTestsMatching '*IT'
    }
}

